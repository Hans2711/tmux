set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# Yazi
# set -g allow-passthrough all
set -ga update-environment TERM
set -ga update-environment TERM_PROGRAM

unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

set-option -g focus-events on
set-option -sg escape-time 10
set-option -g history-limit 5000

set -s set-clipboard on

set -g base-index 1
setw -g pane-base-index 1

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

bind  c  new-window      -c "#{pane_current_path}"
bind  %  split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

unbind r
bind r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

bind-key -n 'C-M-c' copy-mode
bind-key -n 'C-v' paste-buffer

set -g mouse on
set -g status-position top

set-option -ga terminal-overrides ",xterm*:Tc"

set -g @dracula-plugins "time cpu-usage ram-usage"
set -g @dracula-show-powerline true
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g @dracula-refresh-rate 3
set -g @dracula-time-format "%H:%M %d.%m.%Y"
set -g @dracula-ping-rate 5
set -g @dracula-cpu-display-load false

setw -g mode-keys vi

bind -n M-1 if-shell "tmux list-windows | grep -q '^1:'" "select-window -t 1" "new-window -t 1"
bind -n M-2 if-shell "tmux list-windows | grep -q '^2:'" "select-window -t 2" "new-window -t 2"
bind -n M-3 if-shell "tmux list-windows | grep -q '^3:'" "select-window -t 3" "new-window -t 3"
bind -n M-4 if-shell "tmux list-windows | grep -q '^4:'" "select-window -t 4" "new-window -t 4"
bind -n M-5 if-shell "tmux list-windows | grep -q '^5:'" "select-window -t 5" "new-window -t 5"
bind -n M-6 if-shell "tmux list-windows | grep -q '^6:'" "select-window -t 6" "new-window -t 6"
bind -n M-7 if-shell "tmux list-windows | grep -q '^7:'" "select-window -t 7" "new-window -t 7"
bind -n M-8 if-shell "tmux list-windows | grep -q '^8:'" "select-window -t 8" "new-window -t 8"
bind -n M-9 if-shell "tmux list-windows | grep -q '^9:'" "select-window -t 9" "new-window -t 9"
bind -n M-0 if-shell "tmux list-windows | grep -q '^0:'" "select-window -t 0" "new-window -t 0"

bind o run-shell "tmux send-keys C-u 'cd $(www-search.sh)' C-m"
bind g run-shell "tmux send-keys C-u 'cd $(find . -type d | fzf)' C-m"

run '~/.tmux/plugins/tpm/tpm'
